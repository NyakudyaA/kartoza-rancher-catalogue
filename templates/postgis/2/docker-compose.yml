version: '2'
volumes:
  backups:
  media:
  postgis-data:
  pg:
  grafana:
  pw2:

services:
  
  db:
    image: kartoza/postgis:11.0-2.5
    hostname: db
    volumes:
      - 'postgis-data:/var/lib/postgresql'
      - 'backups:/backups'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - ALLOW_IP_RANGE=${POSTGRES_HBA_RANGE}
      - POSTGRES_MULTIPLE_EXTENSIONS=${DB_EXTENSIONS}
    ports:
      - ${POSTGRES_PORT}:5432 
    restart: unless-stopped
  
  dbbackups:
    image: kartoza/pg-backup:11.0
    hostname: pg-backups
    volumes:
      - backups:/backups
    links:
      - db:db
    environment:
      - DUMPPREFIX=PG_${POSTGRES_DUMP_PREFIX}
      # TODO: Normalise these paramer names in pg backup docker image to match pg docker image
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASS}
      - PGDATABASE=${POSTGRES_DB}
      - PGPORT=${POSTGRES_PORT}
      - PGHOST=db
    restart: unless-stopped

  btsync-data:
    # BTSync backups for database dumps
    image: kartoza/btsync
    hostname: btsync-data
    restart: unless-stopped
    volumes:
      - backups:/web:rw
    environment:
      - SECRET=${BTSYNC_DB_SECRET}
      - DEVICE=PostGISDatabase
  pgwatch:
    image: cybertec/pgwatch2
    hostname: pg-watch-metrics
    volumes:
      - pg:/var/lib/postgresql
      - grafana:/var/lib/grafana
      - pw2:/pgwatch2/persistent-config
    environment:
      - PW2_WEBUSER=${WEBUSER}
      - PW2_WEBPASSWORD=${WEBPASSWORD}
      - PW2_GRAFANA_BASEURL=${GRAFANA_BASEURL}
      - PW2_GRAFANANOANONYMOUS=${GRAFANANOANONYMOUS}
      - PW2_GRAFANAUSER=${GRAFANAUSER}
      - PW2_GRAFANAPASSWORD=${GRAFANAPASSWORD}
    ports:
      - ${PW2_WEBPORT}:8080
      - ${PW2_GRAFANAPORT}:3000

    restart: unless-stopped
    links:
      - db:db
