version: '2'
catalog:
  name: "OSM Reporter"
  description: "A simple tool for getting stats for an openstreetmap area."
  version: 1
  uuid: kartoza-osm-reporter-0
  questions:
    - variable: REPORTER_BACKEND_INSTANCE_COUNT
      label: "Reporter backend instance count"
      description: "How many OSM reporter rendering instances to start with."
      required: true
      default: 1
      type: "int"
    - variable: BTSYNC_MEDIA_SECRET
      label: "Logs key"
      description: "Resilio sync read/write key for syncing geojson activity logs"
      required: false
      default: 
      type: "string"
    - variable: CREW
      label: "Comma separated list of crew members"
      description: "Valid OSM users names of people actively working on your data gathering project. When set, an additional tag will be added in the user profile areas to indicate those who are crew members."
      required: false
      default: ''
      type: "string"
    - variable: BBOX
      label: "Initial BBOX for when page loads."
      description: "Default bbox to use for the map and the stats. Format is: {SW_lng},{SW_lat},{NE_lng},{NE_lat}."
      required: false
      default: ''
      type: "string"
    - variable: CACHE_DIR
      label: "Directory to cache OSM files."
      description: "Path to a dir where to cache the OSM files used by the backend. Note you may need to clear this directory out periodically."
      required: false
      default: '/tmp'
      type: "string"
    - variable: LOG_DIR
      label: "Path to a dir where to store request logs in geojson format."
      description: "OSM-Reporter will log requests as geojson files - one file per request. The attributes of each geojson file will contain the following:

feature_type (building, roads etc.)
qgis_version
inasafe_version (if applicable)
year / month / day / hour of request
bounding box of request as a GeoJSON geometry

If you use the btsync log sync option, make sure to leave this at its default value."
      required: false
      default: '/logs'
      type: "string"
services:
  web-lb:
    scale: 1
    start_on_create: true
    lb_config:
      certs: []
      port_rules:
      - hostname: web-lb 
        priority: 1
        protocol: http
        service: web
        source_port: 80
        target_port: 8080
      health_check:
        healthy_threshold: 2
        response_timeout: 2000
        port: 42
        unhealthy_threshold: 3
        initializing_timeout: 60000
        interval: 2000
        reinitializing_timeout: 60000
  web:
    scale: ${REPORTER_BACKEND_INSTANCE_COUNT}
    start_on_create: true
  db:
    scale: ${REPORTER_BACKEND_INSTANCE_COUNT}
    start_on_create: true
