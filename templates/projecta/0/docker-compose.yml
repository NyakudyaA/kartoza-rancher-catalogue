version: '2'
volumes:
  backups:
  media:
  static:
  logs:
  reports:

services:
  smtp:
    image: catatnight/postfix
    hostname: postfix
    environment:
      # You could change this to something more suitable
      - maildomain=${MAIL_DOMAIN}
      - smtp_user=noreply:docker
    restart: on-failure:5
  
  db:
    image: kartoza/postgis:9.6-2.4
    volumes:
      - 'postgis-data:/var/lib/postgresql'
      - 'backups:/backups'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - ALLOW_IP_RANGE=${POSTGRES_HBA_RANGE}
    restart: unless-stopped
  
  uwsgi:
    # At the moment these are built manually on my desktop...
    image: kartoza/projecta-uwsgi:latest
    hostname: uwsgi
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - DATABASE_HOST=db
      - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
      - VIRTUAL_HOST=projecta
      - VIRTUAL_PORT=8080
    volumes:
      - static:/home/web/static:rw
      - media:/home/web/media:rw
      - reports:/home/web/reports
      - logs:/var/log/
    links:
      - smtp:smtp
      - db:db
    restart: on-failure:5
    # TODO  - run as non priviledged user
    user: root
  # This is main entry point for a production server
  web:
    image: kartoza/projecta-nginx:latest
    hostname: nginx
    volumes:
      - sites-enabled:/etc/nginx/conf.d:ro
      - static:/home/web/static:ro
      - media:/home/web/media:ro
    links:
      - uwsgi:uwsgi
    ports:
      - "80:80"
      - "443:443"
    restart: on-failure:5
  
  dbbackups:
    image: kartoza/pg-backup:9.6
    hostname: pg-backups
    volumes:
      - db-backups:/backups
    links:
      - db:db
    environment:
      - DUMPPREFIX=PG_projecta
      # TODO: Normalise these paramer names in pg backup docker image to match pg docker image
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASS}
      - PGDATABASE=${POSTGRES_DB}
      - PGPORT=5432
      - PGHOST=db
    restart: unless-stopped

  btsync-data:
    # BTSync backups for database dumps
    image: kartoza/btsync
    hostname: btsync-data
    restart: unless-stopped
    volumes:
      - db-backups:/web:rw
    environment:
      - SECRET=${BTSYNC_DB_SECRET}
      - DEVICE=ProjectaDatabase
     
  btsync-media:
    # BTSync backups for django media
    image: kartoza/btsync
    hostname: btsync-media
    restart: unless-stopped
    volumes:
      - media:/web:rw
    environment:
      - SECRET=${BTSYNC_MEDIA_SECRET}
      - DEVICE=ProjectaMedia

